{"version":3,"sources":["img/GuitarHeadTuner.svg","components/strings.js","components/button/buttonData.js","components/button/button.js","components/barsObject.js","utils/utils.js","App.js","index.js"],"names":["temp","forEach","string","push","id","text","charAt","className1","className2","stringObject","String","className","initialState","style","backgroundImage","border","height","width","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","textAlign","color","padding","marginLeft","marginRight","borderRadius","marginTop","onClickState","paddingLeft","paddingRight","onEnterHover","cursor","animationName","animationDuration","animationIterationCount","backgroundColor","audioContext","window","AudioContext","webkitAudioContext","Button","useState","startButton","setStartButton","setText","onClick","state","resume","console","log","onMouseLeave","onMouseEnter","suspend","barObject","i","length","value","position","top","background","left","tunerChart","notes","setValues","pitch","clarity","f1","f2","closest","reduce","prev","curr","Math","abs","noteIndex","indexOf","centVal","log2","textReturn","stringReturn","note","map","item","instruction","cents","App","stringData","setStringData","bar","analyserNode","createAnalyser","a","stream","navigator","mediaDevices","getUserMedia","audio","createMediaStreamSource","connect","detector","PitchDetector","forFloat32Array","fftSize","input","Float32Array","inputLength","getPitch","getFloatTimeDomainData","findPitch","sampleRate","undefined","setInterval","useEffect","getMedia","round","src","guitarImg","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75a2e318.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/GuitarHeadTuner.558f62e0.svg\";","const stringList = [\"E\", \"A\", \"D\", \"G\", \"B\", \"E1\"];\n\nconst temp = [];\n\nstringList.forEach((string) => {\n  temp.push({\n    id: string,\n    text: string.charAt(0),\n    className1: \"strings\",\n    className2: \"random\",\n  });\n});\n\nexport const stringObject = temp;\n\nexport default String = ({ id, text, className1, className2 }) => {\n  return (\n    <div className={className1} id={id}>\n      <div className={className2}>{text}</div>\n    </div>\n  );\n};\n","export const initialState = {\n  text: \"Start Tuning!\",\n  style: {\n    backgroundImage: \"linear-gradient(to left, lightblue, lightgreen)\",\n    border: \"transparent\",\n    height: \"100px\",\n    width: \"300px\",\n    fontFamily: `\"Source Sans Pro\", sans-serif`,\n    fontStyle: \"normal\",\n    fontWeight: \"300\",\n    fontSize: \" 35px\",\n    lineHeight: \" 35px\",\n    textAlign: \" center\",\n    color: \"#5a5a5f\",\n    padding: \"20px\",\n    marginLeft: \" 50px\",\n    marginRight: \" 50px\",\n    borderRadius: \" 10px\",\n    marginTop: \"30px\",\n  },\n};\n\nexport const onClickState = {\n  text: \"\",\n  style: {\n    border: \"0px\",\n    height: \"0px\",\n    width: \"0px\",\n    fontWeight: 0,\n    fontSize: 0,\n    lineHeight: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    marginLeft: 0,\n    marginRight: 0,\n    borderRadius: 0,\n  },\n};\n\nexport const onEnterHover = {\n  text: \"Start Tuning!\",\n  style: {\n    // backgroundImage: \"linear-gradient(to left, #CFFAF8, #A2FFA2)\",\n    border: \"transparent\",\n    height: \"100px\",\n    width: \"300px\",\n    fontFamily: `\"Source Sans Pro\", sans-serif`,\n    fontStyle: \"normal\",\n    fontWeight: \"300\",\n    fontSize: \" 35px\",\n    lineHeight: \" 35px\",\n    textAlign: \" center\",\n    color: \"#49494e\",\n    padding: \"20px\",\n    marginLeft: \" 50px\",\n    marginRight: \" 50px\",\n    borderRadius: \" 10px\",\n    cursor: \"pointer\",\n    animationName: \"buttons\",\n    animationDuration: \".5s\",\n    animationIterationCount: \"1\",\n    marginTop: \"30px\",\n    backgroundColor: \"#fcfcfc\",\n  },\n};\n","import { initialState, onClickState, onEnterHover } from \"./buttonData\";\nimport { useState, useEffect } from \"react\";\n\nexport const AudioContext = window.AudioContext || window.webkitAudioContext;\nexport const audioContext = new AudioContext();\n\naudioContext.suspend();\n\nexport default function Button() {\n  const [startButton, setStartButton] = useState(initialState);\n  const [text, setText] = useState(\"\");\n  const handleClick = () => {\n    setStartButton(onClickState);\n    if (audioContext.state === \"suspended\") {\n      audioContext.resume();\n      console.log(\"Started reading audio\");\n    } else console.log(\"not started\");\n    setText(\"Pluck a string!\");\n  };\n  const handleEnterHover = () => {\n    setStartButton(onEnterHover);\n  };\n  const handleLeaveHover = () => {\n    if (startButton !== onClickState) {\n      setStartButton(initialState);\n    }\n  };\n\n  return (\n    <>\n      <button\n        className=\"audioStartButton\"\n        onClick={handleClick}\n        onMouseLeave={handleLeaveHover}\n        onMouseEnter={handleEnterHover}\n        style={startButton.style}\n      >\n        {startButton.text}\n      </button>\n    </>\n  );\n}\n","const nBars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1];\nconst barObject = [];\nnBars.forEach((i) => {\n  if (i === 1) {\n    barObject.push({\n      id: barObject.length,\n      value: i,\n      className: `bars${i}`,\n      style: {\n        position: \"absolute\",\n        width: \" 6px\",\n        height: \" 80px\",\n        top: \" 205px\",\n        background: \" #cecece\",\n        left: `${barObject.length * 21 + 18}px`,\n      },\n    });\n  } else {\n    barObject.push({\n      id: barObject.length,\n      value: i,\n      className: `bars${i}`,\n      style: {\n        position: \"absolute\",\n        width: \" 6px\",\n        height: \" 40px\",\n        top: \" 225px\",\n        background: \" #cecece\",\n        left: `${barObject.length * 21 + 18}px`,\n      },\n    });\n  }\n});\n\nexport default barObject;\n","import barObject from \"../components/barsObject\";\nimport { stringObject } from \"../components/strings\";\n\nconst tunerChart = [82.41, 110, 146.83, 196, 246.94, 329.63];\n\nconst cents = (f1, f2) => 1200 * Math.log2(f2 / f1);\n\nconst notes = [\"E\", \"A\", \"D\", \"G\", \"B\", \"E1\"];\n\nconst barStructure = [\n  {\n    cent: 7.5,\n    id: [8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 12,\n    id: [7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 18,\n    id: [6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 28,\n    id: [5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 43,\n    id: [4, 5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 67,\n    id: [3, 4, 5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 104,\n    id: [2, 3, 4, 5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 161,\n    id: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n  {\n    cent: 247,\n    id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n    colorID: \"#E58A8A\",\n    color: \"D7D3D3;\",\n  },\n];\n\nexport const setValues = (pitch, clarity) => {\n  const closest = tunerChart.reduce((prev, curr) =>\n    Math.abs(curr - pitch) < Math.abs(prev - pitch) ? curr : prev\n  );\n\n  const noteIndex = tunerChart.indexOf(closest);\n  const centVal = cents(closest, pitch);\n  let textReturn = {};\n  let stringReturn = [];\n  const note = notes[noteIndex];\n\n  if (clarity > 0.98 && pitch > 50) {\n    stringObject.map((item) => {\n      if (item.id == note) {\n        stringReturn.push({\n          id: note,\n          text: note[0],\n          className1: \"outer\",\n          className2: \"activeStrings\",\n        });\n      } else stringReturn.push(item);\n    });\n    if (Math.abs(centVal) < 5) {\n      textReturn = {\n        instruction: \"Congrats 🎉\",\n        text: \"You tuned the guitar!\",\n        className: \"onAudioRight\",\n        cents: centVal,\n      };\n    } else if (centVal < -5) {\n      textReturn = {\n        instruction: \"Tighent the string a bit!\",\n        text: \"Low\",\n        className: \"onAudioWrong\",\n        cents: centVal,\n      };\n    } else if (centVal > 5) {\n      textReturn = {\n        instruction: \"Loosen the string a bit!\",\n        text: \"High\",\n        className: \"onAudioWrong\",\n        cents: centVal,\n      };\n    }\n  }\n  //   barStructure.map((item)=>{\n\n  //   })\n  return { text: textReturn, string: stringReturn, cents: centVal };\n};\n","import \"./App.css\";\nimport guitarImg from \"./img/GuitarHeadTuner.svg\";\nimport String from \"./components/strings\";\nimport Button from \"./components/button/button\";\nimport { PitchDetector, Autocorrelator } from \"pitchy\";\nimport { audioContext } from \"./components/button/button\";\nimport { useState, useEffect } from \"react\";\nimport { setValues } from \"./utils/utils\";\nimport { stringObject } from \"./components/strings\";\nimport barObject from \"./components/barsObject\";\n\naudioContext.suspend();\n\nfunction App() {\n  const [text, setText] = useState({\n    instruction: \"\",\n    text: \"\",\n    className: \"onNull\",\n  });\n  const [stringData, setStringData] = useState(stringObject);\n  const [bar, setBar] = useState(barObject);\n  const analyserNode = audioContext.createAnalyser();\n  useEffect(() => {\n    getMedia();\n  }, []);\n\n  async function getMedia() {\n    let stream = null;\n    stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    audioContext.createMediaStreamSource(stream).connect(analyserNode);\n    const detector = PitchDetector.forFloat32Array(analyserNode.fftSize);\n    const input = new Float32Array(detector.inputLength);\n\n    const getPitch = () => {\n      analyserNode.getFloatTimeDomainData(input);\n      const [pitch, clarity] = detector.findPitch(\n        input,\n        audioContext.sampleRate\n      );\n      const temp = setValues(pitch, clarity);\n      if (\n        temp.text.instruction !== undefined &&\n        temp.text.text !== undefined &&\n        temp.text.className !== undefined\n      ) {\n        setText({\n          className: temp.text.className,\n          text: temp.text.text,\n          instruction: temp.text.instruction,\n          cents: temp.text.cents,\n        });\n        setStringData(temp.string);\n      }\n    };\n\n    window.setInterval(() => getPitch(), 50);\n  }\n\n  // getMedia();\n\n  return (\n    <div className=\"Tuner\" id=\"tuner\">\n      <div className=\"heading\">Guitar Tuner</div>\n      <Button />\n\n      {stringData.map((item) => {\n        return (\n          <String\n            key={item.id}\n            id={item.id}\n            text={item.text}\n            className1={item.className1}\n            className2={item.className2}\n          />\n        );\n      })}\n      {bar.map((item) => {\n        return (\n          <div className={item.className} id={item.id} style={item.style}></div>\n        );\n      })}\n      <div className={text.className}>{text.text}</div>\n      <div className=\"onAudioInstruction\">{text.instruction}</div>\n      <div className={text.className} id=\"cents\">\n        {Math.round(text.cents)}\n      </div>\n\n      <img className=\"guitarImg\" src={guitarImg} alt=\"Guitar Icon\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}